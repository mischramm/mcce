@software{ederer2024,
  title    = {Underwater {{Camera Project}}},
  author   = {Ederer, Thomas},
  date     = {2024},
  url      = {https://underwater-camera-project.github.io},
  urldate  = {2024-06-11},
  keywords = {codeRepository,master_thesis}
}

@report{eisler1998,
  type     = {Report},
  title    = {Copper Hazards to Fish, Wildlife and Invertebrates: A Synoptic Review},
  author   = {Eisler, Ronald},
  date     = {1998},
  number   = {Report 33 ; Biological Science Report USGS/BRD/BSR--1997-0002.},
  pages    = {103},
  location = {Laurel, MD},
  url      = {https://pubs.usgs.gov/publication/5200199},
  langid   = {english},
  keywords = {containsScientificReferences,master_thesis,referencesChecked,scientific},
  file     = {D:\FH\Zotero\storage\CLTCWSUY\Eisler - 1998 - Copper hazards to fish, wildlife and invertebrates.pdf}
}

@article{favaro2012,
  title        = {{{TrapCam}}: An Inexpensive Camera System for Studying Deep-Water Animals: {{{\emph{Inexpensive}}}}{\emph{ Tool for Deep-Water Observations}}},
  shorttitle   = {{{TrapCam}}},
  author       = {Favaro, Brett and Lichota, Corinna and Côté, Isabelle M. and Duff, Stefanie D.},
  date         = {2012-02},
  journaltitle = {Methods in Ecology and Evolution},
  volume       = {3},
  number       = {1},
  pages        = {39--46},
  issn         = {2041210X},
  doi          = {10.1111/j.2041-210X.2011.00128.x},
  url          = {https://onlinelibrary.wiley.com/doi/10.1111/j.2041-210X.2011.00128.x},
  urldate      = {2023-09-08},
  langid       = {english},
  keywords     = {containsScientificReferences,master_thesis,referencesChecked,scientific},
  file         = {D:\FH\Zotero\storage\CU9V8FHG\Favaro et al. - 2012 - TrapCam an inexpensive camera system for studying.pdf}
}

@book{zastrow2018,
  title     = {Rechenbuch Der {{Elektronik}}},
  author    = {Zastrow, Peter},
  date      = {2018-07-27},
  edition   = {2006},
  publisher = {Elektronik-Praktiker},
  isbn      = {978-3-947167-27-2},
  keywords  = {master_thesis}
}

@article{peffers2007,
  title        = {A {{Design Science Research Methodology}} for {{Information Systems Research}}},
  author       = {Peffers, Ken and Tuunanen, Tuure and Rothenberger, Marcus A. and Chatterjee, Samir},
  date         = {2007-12},
  journaltitle = {Journal of Management Information Systems},
  shortjournal = {Journal of Management Information Systems},
  volume       = {24},
  number       = {3},
  pages        = {45--77},
  issn         = {0742-1222, 1557-928X},
  doi          = {10.2753/MIS0742-1222240302},
  url          = {https://www.tandfonline.com/doi/full/10.2753/MIS0742-1222240302},
  urldate      = {2023-12-22},
  langid       = {english},
  keywords     = {containsScientificReferences,master_thesis,referencesChecked,scientific},
  file         = {D:\FH\Zotero\storage\GJWNIGF4\Peffers et al. - 2007 - A Design Science Research Methodology for Informat.pdf}
}


@book{engartner_transformation_2006,
	address = {Berlin},
	series = {Manuskripte},
	title = {Die {Transformation} des {Politischen}: {Analysen}, {Deutungen} und {Perspektiven}: {Siebentes} und {Achtes} {DoktorandInnenseminar} der {Rosa}-{Luxemburg}-{Stiftung}},
	isbn = {978-3-320-02105-4},
	shorttitle = {Die {Transformation} des {Politischen}},
	language = {de},
	number = {66},
	publisher = {s.n.},
	editor = {Engartner, Tim and Rosa-Luxemburg-Stiftung},
	year = {2006},
	file = {Engartner and Rosa-Luxemburg-Stiftung - 2006 - Die Transformation des Politischen Analysen, Deut.pdf:files/69/Engartner and Rosa-Luxemburg-Stiftung - 2006 - Die Transformation des Politischen Analysen, Deut.pdf:application/pdf},
}

@article{costa_design_2019,
	title = {Design of experiments – overcome hindrances and bad practices},
	volume = {31},
	issn = {1754-2731},
	url = {https://www.emerald.com/insight/content/doi/10.1108/TQM-02-2019-0035/full/html},
	doi = {10.1108/TQM-02-2019-0035},
	abstract = {Purpose – The purpose of this paper is to address misconceptions about the design of experiments (DoE) usefulness, avoid bad practices and foster processes’ efficiency and products’ quality in a timely and cost-effective manner with this tool.},
	language = {en},
	number = {5},
	urldate = {2024-01-15},
	journal = {The TQM Journal},
	author = {Costa, Nuno},
	month = oct,
	year = {2019},
	pages = {772--789},
	file = {Costa - 2019 - Design of experiments – overcome hindrances and ba.pdf:files/70/Costa - 2019 - Design of experiments – overcome hindrances and ba.pdf:application/pdf},
}

@article{alyas_container_2022,
	title = {Container {Performance} and {Vulnerability} {Management} for {Container} {Security} {Using} {Docker} {Engine}},
	volume = {2022},
	issn = {1939-0122, 1939-0114},
	url = {https://www.hindawi.com/journals/scn/2022/6819002/},
	doi = {10.1155/2022/6819002},
	abstract = {Containers have evolved to support microservice architecture as a low-cost alternative to virtual machines. Containers are increasingly prevalent in the virtualization landscape because of better working; containers can bear considerably less overhead than the conventional hypervisor-based component virtual machines. However, containers directly communicate with the host kernel, and attackers can co-locate containers in the host system quicker than virtual machines. This causes significant security issues in container technology. The security hardening system is currently targeted at implementing universal access management regulations that make it difficult to assess the required procedure for accessing containers. Security mechanisms include an explicit awareness of the purpose and actions of the container and entail manual interaction and configuration. A user-friendly container protection scheme implemented an access policy to comply with its anticipated and legitimate application performance. In this study, container technology constraints have been overcome by proposing a unique Docker-sec mechanism. Docker-sec uses four mechanisms; the original collection has been improved during container runtime by additional rules that constrain the capacity of the container, further representing the applications in practice, file system, processes, network isolation, and vulnerability scanning of Docker images over different workload. Different vulnerabilities have been scanned with a CVE severity level. Results showed that inter-container communication with the system is more secure containers from zero vulnerabilities with an overhead of 3.45\%.},
	language = {en},
	urldate = {2023-11-05},
	journal = {Security and Communication Networks},
	author = {Alyas, Tahir and Ali, Sikandar and Khan, Habib Ullah and Samad, Ali and Alissa, Khalid and Saleem, Muhammad Asif},
	editor = {Shafiq, Muhammad},
	month = aug,
	year = {2022},
	pages = {1--11},
	file = {Alyas et al. - 2022 - Container Performance and Vulnerability Management.pdf:files/71/Alyas et al. - 2022 - Container Performance and Vulnerability Management.pdf:application/pdf},
}

@article{zhu_access_2023,
	title = {Access {Security} {Policy} {Generation} for {Containers} as a {Cloud} {Service}},
	volume = {4},
	issn = {2661-8907},
	url = {https://link.springer.com/10.1007/s42979-023-02186-1},
	doi = {10.1007/s42979-023-02186-1},
	abstract = {The rapid development of containerization technology comes with remarkable benefits for developers and operation teams. Container solutions allow building very flexible software infrastructures. Although lots of efforts have been devoted to enhancing containerization security, containerized environments still have a huge attack surface. Completely avoiding severe security issues have so far not been possible to achieve. However, the security problems due to vulnerabilities in for instance kernels, can be largely reduced if the container privileges are as restricted as possible. Mandatory access control is an efficient way to achieve this using for instance AppArmor. As manual AppArmor generation is tedious and error prone, automatic generation of protection profile is necessary. In previous research, a new tool for tight AppArmor profile generation was presented. In this paper we show how, in a system setting, such tool can be combined with container service testing, to provide a cloud based container service for automatic AppArmore profile generation. We present solutions for profile generation both for centrally collected and generated container logs and for log collection through a local agent. To evaluate the effectiveness of the profile generation service, we enable it on a widely used containerized web service to generate profiles and test them with real-world attacks. We generate an exploit database with 11 exploits harmful to the tested web service. These exploits are sifted from the 56 exploits of Exploit-db targeting the tested web service’s software. We launch these exploits on the web service protected by the profile. The results show that the proposed profile generation service improves the test web service’s overall security a lot compared to using the default Docker security profile. This together with the very user friendly and robust principle for setting up and running the service, clearly indicates that the approach is an important step for improving container security in real deployments.},
	language = {en},
	number = {6},
	urldate = {2023-11-05},
	journal = {SN Computer Science},
	author = {Zhu, Hui and Gehrmann, Christian and Roth, Paula},
	month = sep,
	year = {2023},
	pages = {748},
	file = {Zhu et al. - 2023 - Access Security Policy Generation for Containers a.pdf:files/72/Zhu et al. - 2023 - Access Security Policy Generation for Containers a.pdf:application/pdf},
}

@article{dellimmagine_kubehound_2023,
	title = {{KubeHound}: {Detecting} {Microservices}’ {Security} {Smells} in {Kubernetes} {Deployments}},
	volume = {15},
	issn = {1999-5903},
	shorttitle = {{KubeHound}},
	url = {https://www.mdpi.com/1999-5903/15/7/228},
	doi = {10.3390/fi15070228},
	abstract = {As microservice-based architectures are increasingly adopted, microservices security has become a crucial aspect to consider for IT businesses. Starting from a set of “security smells” for microservice applications that were recently proposed in the literature, we enable the automatic detection of such smells in microservice applications deployed with Kubernetes. We ﬁrst introduce possible analysis techniques to automatically detect security smells in Kubernetes-deployed microservices. We then demonstrate the practical applicability of the proposed techniques by introducing KUBEHOUND, an extensible prototype tool for automatically detecting security smells in microservice applications, and which already features a selected subset of the discussed analyses. We ﬁnally show that KUBEHOUND can effectively detect instances of security smells in microservice applications by means of controlled experiments and by applying it to existing, third-party applications.},
	language = {en},
	number = {7},
	urldate = {2023-11-05},
	journal = {Future Internet},
	author = {Dell’Immagine, Giorgio and Soldani, Jacopo and Brogi, Antonio},
	month = jun,
	year = {2023},
	pages = {228},
	file = {Dell’Immagine et al. - 2023 - KubeHound Detecting Microservices’ Security Smell.pdf:files/73/Dell’Immagine et al. - 2023 - KubeHound Detecting Microservices’ Security Smell.pdf:application/pdf},
}

@article{lee_experimental_2023,
	title = {Experimental {Analysis} of {Security} {Attacks} for {Docker} {Container} {Communications}},
	volume = {12},
	issn = {2079-9292},
	url = {https://www.mdpi.com/2079-9292/12/4/940},
	doi = {10.3390/electronics12040940},
	abstract = {Docker has become widely used as an open-source platform for packaging and running applications as containers. It is in the limelight especially at companies and IT developers that provide cloud services thanks to its advantages such as the portability of applications and being lightweight. Docker provides communication between multiple containers through internal network conﬁguration, which makes it easier to conﬁgure various services by logically connecting containers to each other, but cyberattacks exploiting the vulnerabilities of the Docker container network, e.g., distributed denial of service (DDoS) and cryptocurrency mining attacks, have recently occurred. In this paper, we experiment with cyberattacks such as ARP spooﬁng, DDoS, and elevation of privilege attacks to show how attackers can execute various attacks and analyze the results in terms of network trafﬁc, CPU consumption, and malicious reverse shell execution. In addition, by examining the attacks from the network perspective of the Docker container environment, we lay the groundwork for detecting and preventing lateral movement attacks that may occur between the Docker containers.},
	language = {en},
	number = {4},
	urldate = {2023-11-05},
	journal = {Electronics},
	author = {Lee, Haneul and Kwon, Soonhong and Lee, Jong-Hyouk},
	month = feb,
	year = {2023},
	pages = {940},
	file = {Lee et al. - 2023 - Experimental Analysis of Security Attacks for Dock.pdf:files/74/Lee et al. - 2023 - Experimental Analysis of Security Attacks for Dock.pdf:application/pdf},
}

@article{spasiteleva_development_2023,
	title = {{DEVELOPMENT} {OF} {SECURE} {CONTAINERIZED} {APPLICATIONS} {WITH} {A} {MICROSERVICES} {ARCHITECTURE}},
	volume = {1},
	issn = {2663-4023},
	url = {https://csecurity.kubg.edu.ua/index.php/journal/article/view/506},
	doi = {10.28925/2663-4023.2023.21.193210},
	abstract = {The article analyzes approaches to software development that allow creating complex container applications with a microservice architecture based on automation tools and flexible development methods. The development of cloud technologies, the global strategy of containerization, the modernization of the application architecture, and the increase in security requirements have led to a change in the application development methodology. The study aims to determine approaches to increase the speed of development, security and quality of software code of containerized applications by implementing security principles and automation tools at all stages of the life cycle. Features and development prospects of microservice applications deployed in a container environment are considered. The advantages of the container infrastructure are defined: mobility, scalability, an additional level of microservice security. Containers provide an isolated environment for running a microservices, this reduces the risk of security vulnerabilities and simplifies interaction between microservices. The article identifies the security problems of microservice applications and the main vulnerabilities associated with the use of containers. It is determined that DevSecOps methodology allows implementing modern practice of continuous integration, continuous delivery, continuous application deployment and integration of security tools at all life cycle stages. DevSecOps describes development processes, deployment and operation processes using Security as Code and Infrastructure as Code practices. The research describes the model for developing and deploying   microservice applications with containerization, defines the security domains, and the security controls for DevSecOps development pipeline. Based on this model, the main security control tools that must be used at all development and deployment pipeline stages are defined. The article proves that the considered technique regulates the implementation of given security procedures at all stages of the pipeline, allows to reduce development time and improve code quality for container applications with a microservices architecture.},
	language = {uk},
	number = {21},
	urldate = {2023-11-05},
	journal = {Cybersecurity: Education, Science, Technique},
	author = {Spasiteleva, Svitlana and Chychkan, Ivan and Shevchenko, Svitlana and Zhdanovа, Yulia},
	year = {2023},
	pages = {193--210},
	file = {Spasiteleva et al. - 2023 - DEVELOPMENT OF SECURE CONTAINERIZED APPLICATIONS W.pdf:files/75/Spasiteleva et al. - 2023 - DEVELOPMENT OF SECURE CONTAINERIZED APPLICATIONS W.pdf:application/pdf},
}

@article{dellimmagine_kubehound_2023-1,
	title = {{KubeHound}: {Detecting} {Microservices}’ {Security} {Smells} in {Kubernetes} {Deployments}},
	volume = {15},
	issn = {1999-5903},
	shorttitle = {{KubeHound}},
	url = {https://www.mdpi.com/1999-5903/15/7/228},
	doi = {10.3390/fi15070228},
	abstract = {As microservice-based architectures are increasingly adopted, microservices security has become a crucial aspect to consider for IT businesses. Starting from a set of “security smells” for microservice applications that were recently proposed in the literature, we enable the automatic detection of such smells in microservice applications deployed with Kubernetes. We ﬁrst introduce possible analysis techniques to automatically detect security smells in Kubernetes-deployed microservices. We then demonstrate the practical applicability of the proposed techniques by introducing KUBEHOUND, an extensible prototype tool for automatically detecting security smells in microservice applications, and which already features a selected subset of the discussed analyses. We ﬁnally show that KUBEHOUND can effectively detect instances of security smells in microservice applications by means of controlled experiments and by applying it to existing, third-party applications.},
	language = {en},
	number = {7},
	urldate = {2023-11-05},
	journal = {Future Internet},
	author = {Dell’Immagine, Giorgio and Soldani, Jacopo and Brogi, Antonio},
	month = jun,
	year = {2023},
	pages = {228},
	file = {Dell’Immagine et al. - 2023 - KubeHound Detecting Microservices’ Security Smell.pdf:files/76/Dell’Immagine et al. - 2023 - KubeHound Detecting Microservices’ Security Smell.pdf:application/pdf},
}

@misc{noauthor_state_nodate,
	title = {The {State} of {Enterprise} {Open} {Source}: {A} {Red} {Hat} report},
	url = {https://www.redhat.com/en/resources/state-of-enterprise-open-source-report-2022},
	urldate = {2023-11-03},
	file = {The State of Enterprise Open Source\: A Red Hat report:files/78/state-of-enterprise-open-source-report-2022.html:text/html},
}

@misc{noauthor_26_nodate,
	title = {26 {Kubernetes} {Statistics} to {Reference} {\textbar} {Airplane}},
	url = {https://www.airplane.dev/blog/kubernetes-statistics},
	urldate = {2023-11-03},
	file = {26 Kubernetes Statistics to Reference | Airplane:files/80/kubernetes-statistics.html:text/html},
}

@misc{noauthor_kubernetes_nodate,
	title = {Kubernetes by the numbers, in 2020: 12 stats to see {\textbar} {The} {Enterprisers} {Project}},
	url = {https://enterprisersproject.com/article/2020/6/kubernetes-statistics-2020},
	urldate = {2023-11-03},
	file = {Kubernetes by the numbers, in 2020\: 12 stats to see | The Enterprisers Project:files/81/kubernetes-statistics-2020.html:text/html},
}

@inproceedings{islam_shamim_xi_2020,
	address = {Atlanta, GA, USA},
	title = {{XI} {Commandments} of {Kubernetes} {Security}: {A} {Systematization} of {Knowledge} {Related} to {Kubernetes} {Security} {Practices}},
	isbn = {978-1-72818-388-6},
	shorttitle = {{XI} {Commandments} of {Kubernetes} {Security}},
	url = {https://ieeexplore.ieee.org/document/9230176/},
	doi = {10.1109/SecDev45635.2020.00025},
	abstract = {Kubernetes is an open-source software for automating management of computerized services. Organizations, such as IBM, Capital One and Adidas use Kubernetes to deploy and manage their containers, and have reported beneﬁts related to deployment frequency. Despite reported beneﬁts, Kubernetes deployments are susceptible to security vulnerabilities, such as those that occurred at Tesla in 2018. A systematization of Kubernetes security practices can help practitioners mitigate vulnerabilities in their Kubernetes deployments. The goal of this paper is to help practitioners in securing their Kubernetes installations through a systematization of knowledge related to Kubernetes security practices. We systematize knowledge by applying qualitative analysis on 104 Internet artifacts. We identify 11 security practices that include (i) implementation of role-based access control (RBAC) authorization to provide least privilege, (ii) applying security patches to keep Kubernetes updated, and (iii) implementing pod and network speciﬁc security policies.},
	language = {en},
	urldate = {2023-11-01},
	booktitle = {2020 {IEEE} {Secure} {Development} ({SecDev})},
	publisher = {IEEE},
	author = {Islam Shamim, Md. Shazibul and Ahamed Bhuiyan, Farzana and Rahman, Akond},
	month = sep,
	year = {2020},
	pages = {58--64},
	file = {Islam Shamim et al. - 2020 - XI Commandments of Kubernetes Security A Systemat.pdf:files/82/Islam Shamim et al. - 2020 - XI Commandments of Kubernetes Security A Systemat.pdf:application/pdf},
}

@inproceedings{casalicchio_auto-scaling_2017,
	address = {Tucson, AZ, USA},
	title = {Auto-{Scaling} of {Containers}: {The} {Impact} of {Relative} and {Absolute} {Metrics}},
	isbn = {978-1-5090-6558-5},
	shorttitle = {Auto-{Scaling} of {Containers}},
	url = {http://ieeexplore.ieee.org/document/8064125/},
	doi = {10.1109/FAS-W.2017.149},
	abstract = {Today, The cloud industry is adopting the container technology both for internal usage and as commercial offering. The use of containers as base technology for large-scale systems opens many challenges in the area of resource management at run-time. This paper addresses the problem of selecting the more appropriate performance metrics to activate auto-scaling actions. Speciﬁcally, we investigate the use of relative and absolute metrics. Results demonstrate that, for CPU intense workload, the use of absolute metrics enables more accurate scaling decisions. We propose and evaluate the performance of a new autoscaling algorithm that could reduce the response time of a factor between 0.66 and 0.5 compared to the actual Kubernetes’ horizontal autoscaling algorithm.},
	language = {en},
	urldate = {2023-11-01},
	booktitle = {2017 {IEEE} 2nd {International} {Workshops} on {Foundations} and {Applications} of {Self}* {Systems} ({FAS}*{W})},
	publisher = {IEEE},
	author = {Casalicchio, Emiliano and Perciballi, Vanessa},
	month = sep,
	year = {2017},
	pages = {207--214},
	file = {Casalicchio and Perciballi - 2017 - Auto-Scaling of Containers The Impact of Relative.pdf:files/83/Casalicchio and Perciballi - 2017 - Auto-Scaling of Containers The Impact of Relative.pdf:application/pdf},
}

@article{mondal_kubernetes_2022,
	title = {Kubernetes in {IT} administration and serverless computing: {An} empirical study and research challenges},
	volume = {78},
	issn = {0920-8542, 1573-0484},
	shorttitle = {Kubernetes in {IT} administration and serverless computing},
	url = {https://link.springer.com/10.1007/s11227-021-03982-3},
	doi = {10.1007/s11227-021-03982-3},
	language = {en},
	number = {2},
	urldate = {2023-11-01},
	journal = {The Journal of Supercomputing},
	author = {Mondal, Subrota Kumar and Pan, Rui and Kabir, H M Dipu and Tian, Tan and Dai, Hong-Ning},
	month = feb,
	year = {2022},
	pages = {2937--2987},
	file = {Mondal et al. - 2022 - Kubernetes in IT administration and serverless com.pdf:files/84/Mondal et al. - 2022 - Kubernetes in IT administration and serverless com.pdf:application/pdf},
}

@article{djenna_unmasking_2023,
	title = {Unmasking {Cybercrime} with {Artificial}-{Intelligence}-{Driven} {Cybersecurity} {Analytics}},
	volume = {23},
	issn = {1424-8220},
	url = {https://www.mdpi.com/1424-8220/23/14/6302},
	doi = {10.3390/s23146302},
	abstract = {Cybercriminals are becoming increasingly intelligent and aggressive, making them more adept at covering their tracks, and the global epidemic of cybercrime necessitates signiﬁcant efforts to enhance cybersecurity in a realistic way. The COVID-19 pandemic has accelerated the cybercrime threat landscape. Cybercrime has a signiﬁcant impact on the gross domestic product (GDP) of every targeted country. It encompasses a broad spectrum of offenses committed online, including hacking; sensitive information theft; phishing; online fraud; modern malware distribution; cyberbullying; cyber espionage; and notably, cyberattacks orchestrated by botnets. This study provides a new collaborative deep learning approach based on unsupervised long short-term memory (LSTM) and supervised convolutional neural network (CNN) models for the early identiﬁcation and detection of botnet attacks. The proposed work is evaluated using the CTU-13 and IoT-23 datasets. The experimental results demonstrate that the proposed method achieves superior performance, obtaining a very satisfactory success rate (over 98.7\%) and a false positive rate of 0.04\%. The study facilitates and improves the understanding of cyber threat intelligence, identiﬁes emerging forms of botnet attacks, and enhances forensic investigation procedures.},
	language = {en},
	number = {14},
	urldate = {2023-11-01},
	journal = {Sensors},
	author = {Djenna, Amir and Barka, Ezedin and Benchikh, Achouak and Khadir, Karima},
	month = jul,
	year = {2023},
	pages = {6302},
	file = {Djenna et al. - 2023 - Unmasking Cybercrime with Artificial-Intelligence-.pdf:files/85/Djenna et al. - 2023 - Unmasking Cybercrime with Artificial-Intelligence-.pdf:application/pdf},
}

@article{aslan_comprehensive_2023,
	title = {A {Comprehensive} {Review} of {Cyber} {Security} {Vulnerabilities}, {Threats}, {Attacks}, and {Solutions}},
	volume = {12},
	issn = {2079-9292},
	url = {https://www.mdpi.com/2079-9292/12/6/1333},
	doi = {10.3390/electronics12061333},
	abstract = {Internet usage has grown exponentially, with individuals and companies performing multiple daily transactions in cyberspace rather than in the real world. The coronavirus (COVID-19) pandemic has accelerated this process. As a result of the widespread usage of the digital environment, traditional crimes have also shifted to the digital space. Emerging technologies such as cloud computing, the Internet of Things (IoT), social media, wireless communication, and cryptocurrencies are raising security concerns in cyberspace. Recently, cyber criminals have started to use cyber attacks as a service to automate attacks and leverage their impact. Attackers exploit vulnerabilities that exist in hardware, software, and communication layers. Various types of cyber attacks include distributed denial of service (DDoS), phishing, man-in-the-middle, password, remote, privilege escalation, and malware. Due to new-generation attacks and evasion techniques, traditional protection systems such as ﬁrewalls, intrusion detection systems, antivirus software, access control lists, etc., are no longer effective in detecting these sophisticated attacks. Therefore, there is an urgent need to ﬁnd innovative and more feasible solutions to prevent cyber attacks. The paper ﬁrst extensively explains the main reasons for cyber attacks. Then, it reviews the most recent attacks, attack patterns, and detection techniques. Thirdly, the article discusses contemporary technical and nontechnical solutions for recognizing attacks in advance. Using trending technologies such as machine learning, deep learning, cloud platforms, big data, and blockchain can be a promising solution for current and future cyber attacks. These technological solutions may assist in detecting malware, intrusion detection, spam identiﬁcation, DNS attack classiﬁcation, fraud detection, recognizing hidden channels, and distinguishing advanced persistent threats. However, some promising solutions, especially machine learning and deep learning, are not resistant to evasion techniques, which must be considered when proposing solutions against intelligent cyber attacks.},
	language = {en},
	number = {6},
	urldate = {2023-11-01},
	journal = {Electronics},
	author = {Aslan, Ömer and Aktuğ, Semih Serkant and Ozkan-Okay, Merve and Yilmaz, Abdullah Asim and Akin, Erdal},
	month = mar,
	year = {2023},
	pages = {1333},
	annote = {Paper for definition of Cyber Security, can be used in 2.1.2
},
	file = {Aslan et al. - 2023 - A Comprehensive Review of Cyber Security Vulnerabi.pdf:files/86/Aslan et al. - 2023 - A Comprehensive Review of Cyber Security Vulnerabi.pdf:application/pdf},
}

@article{djenna_artificial_2023,
	title = {Artificial {Intelligence}-{Based} {Malware} {Detection}, {Analysis}, and {Mitigation}},
	volume = {15},
	issn = {2073-8994},
	url = {https://www.mdpi.com/2073-8994/15/3/677},
	doi = {10.3390/sym15030677},
	abstract = {Malware, a lethal weapon of cyber attackers, is becoming increasingly sophisticated, with rapid deployment and self-propagation. In addition, modern malware is one of the most devastating forms of cybercrime, as it can avoid detection, make digital forensics investigation in near real-time impossible, and the impact of advanced evasion strategies can be severe and far-reaching. This makes it necessary to detect it in a timely and autonomous manner for effective analysis. This work proposes a new systematic approach to identifying modern malware using dynamic deep learning-based methods combined with heuristic approaches to classify and detect ﬁve modern malware families: adware, Radware, rootkit, SMS malware, and ransomware. Our symmetry investigation in artiﬁcial intelligence and cybersecurity analytics will enhance malware detection, analysis, and mitigation abilities to provide resilient cyber systems against cyber threats. We validated our approach using a dataset that speciﬁcally contains recent malicious software to demonstrate that the model achieves its goals and responds to real-world requirements in terms of effectiveness and efﬁciency. The experimental results indicate that the combination of behavior-based deep learning and heuristic-based approaches for malware detection and classiﬁcation outperforms the use of static deep learning methods.},
	language = {en},
	number = {3},
	urldate = {2023-11-01},
	journal = {Symmetry},
	author = {Djenna, Amir and Bouridane, Ahmed and Rubab, Saddaf and Marou, Ibrahim Moussa},
	month = mar,
	year = {2023},
	pages = {677},
	file = {Djenna et al. - 2023 - Artificial Intelligence-Based Malware Detection, A.pdf:files/87/Djenna et al. - 2023 - Artificial Intelligence-Based Malware Detection, A.pdf:application/pdf},
}

@article{buja_proactive_2022,
	title = {{PROACTIVE} {MONITORING} {FOR} {SMEs} {USING} {APPINSIGHT}},
	volume = {13},
	issn = {09765697},
	url = {http://www.ijarcs.info/index.php/Ijarcs/article/view/6901},
	doi = {10.26483/ijarcs.v13i5.6901},
	abstract = {Data Security is a worldwide concern mostly for small medium enterprise (SMEs) and frameworks, approaches, methods are constantly evolving that has a connection with cloud computing, information systems, artificial intelligence, blockchain. Many developers, administrators or product teams running blind. Those are not knowing of problems with their application or do not have the information to fix the problems. The things which can go wrong with web and mobile applications or services is unlimited like dependency failures, resources, and crashes. Main argument is an evaluation of benefits by using Cloud as infrastructure and application on proactive monitoring called Azure Application Insights (AppInsight) towards target like web application, web API, PKI etc. The findings, demonstration of the study should reveal and support our main hypothesis that there is direct link between the proactive monitoring and the main factors that affects utilizing the cloud services. To address this need, in this paper, we introduce AppInsight, the best practice and a model of proactive approach to monitor different targets using Microsoft technology on Azure Cloud services. AppInsight – a model of proactive monitoring includes several functionalities: (1) identifying availability, (2) failures dependencies, (3) performance and (4) using telemetry data generates ad-hoc solution to fix potential failure of web application, web API etc. AppInsight a feature of Azure Monitor used to monitor live applications. AppInsight will aut omatically detect performance anomalies, and includes powerful analytics tools to help you diagnose issues. You will get a range of telemetry data of analytics of your target which is monitored by AppInsight. To evaluate this tool, we conduct an empirical evaluation by comparing data from actual live monitoring of Y target.},
	language = {en},
	number = {5},
	urldate = {2023-11-01},
	journal = {International Journal of Advanced Research in Computer Science},
	author = {Buja, Atdhe},
	month = oct,
	year = {2022},
	pages = {1--8},
	file = {Buja - 2022 - PROACTIVE MONITORING FOR SMEs USING APPINSIGHT.pdf:files/88/Buja - 2022 - PROACTIVE MONITORING FOR SMEs USING APPINSIGHT.pdf:application/pdf},
}

@misc{deng_cloud-native_2023,
	title = {Cloud-{Native} {Computing}: {A} {Survey} from the {Perspective} of {Services}},
	shorttitle = {Cloud-{Native} {Computing}},
	url = {http://arxiv.org/abs/2306.14402},
	abstract = {The development of cloud computing delivery models inspires the emergence of cloud-native computing. Cloudnative computing, as the most influential development principle for web applications, has already attracted increasingly more attention in both industry and academia. Despite the momentum in the cloud-native industrial community, a clear research roadmap on this topic is still missing. As a contribution to this knowledge, this paper surveys key issues during the life-cycle of cloud-native applications, from the perspective of services. Specifically, we elaborate the research domains by decoupling the life-cycle of cloud-native applications into four states: building, orchestration, operate, and maintenance. We also discuss the fundamental necessities and summarize the key performance metrics that play critical roles during the development and management of cloud-native applications. We highlight the key implications and limitations of existing works in each state. The challenges, future directions, and research opportunities are also discussed.},
	language = {en},
	urldate = {2023-11-01},
	publisher = {arXiv},
	author = {Deng, Shuiguang and Zhao, Hailiang and Huang, Binbin and Zhang, Cheng and Chen, Feiyi and Deng, Yinuo and Yin, Jianwei and Dustdar, Schahram and Zomaya, Albert Y.},
	month = jun,
	year = {2023},
	note = {arXiv:2306.14402 [cs]},
	keywords = {Computer Science - Distributed, Parallel, and Cluster Computing, Computer Science - Software Engineering},
	file = {Deng et al. - 2023 - Cloud-Native Computing A Survey from the Perspect.pdf:files/89/Deng et al. - 2023 - Cloud-Native Computing A Survey from the Perspect.pdf:application/pdf},
}

@misc{noauthor_pdf_nodate,
	title = {[{PDF}] {Cloud}-{Native} {Computing}: {A} {Survey} from the {Perspective} of {Services} {\textbar} {Semantic} {Scholar}},
	url = {https://www.semanticscholar.org/reader/2c8bccb96bc922eb57d824b573a417e31597fa39},
	urldate = {2023-11-01},
	file = {[PDF] Cloud-Native Computing A Survey from the Pe.html:files/79/[PDF] Cloud-Native Computing A Survey from the Pe.html:text/html},
}

@article{casalicchio_stateart_2020,
	title = {The state‐of‐the‐art in container technologies: {Application}, orchestration and security},
	volume = {32},
	issn = {1532-0626, 1532-0634},
	shorttitle = {The state‐of‐the‐art in container technologies},
	url = {https://onlinelibrary.wiley.com/doi/10.1002/cpe.5668},
	doi = {10.1002/cpe.5668},
	abstract = {Containerization is a lightweight virtualization technology enabling the deployment and execution of distributed applications on cloud, edge/fog and Internet-of-Things platforms. Container technologies are evolving at the speed of light and there are many open research challenges.},
	language = {en},
	number = {17},
	urldate = {2023-11-01},
	journal = {Concurrency and Computation: Practice and Experience},
	author = {Casalicchio, Emiliano and Iannucci, Stefano},
	month = sep,
	year = {2020},
	pages = {e5668},
	file = {Casalicchio and Iannucci - 2020 - The state‐of‐the‐art in container technologies Ap.pdf:files/90/Casalicchio and Iannucci - 2020 - The state‐of‐the‐art in container technologies Ap.pdf:application/pdf},
}

@article{shukla_quantitative_2023,
	title = {A quantitative framework for security assurance evaluation and selection of cloud services: a case study},
	volume = {22},
	issn = {1615-5262, 1615-5270},
	shorttitle = {A quantitative framework for security assurance evaluation and selection of cloud services},
	url = {https://link.springer.com/10.1007/s10207-023-00709-8},
	doi = {10.1007/s10207-023-00709-8},
	abstract = {Abstract

              Due to the high adoption of cloud services, the protection of data and information is critical. Cloud service customers (CSCs) need help to obtain the authoritative assurances required for the cloud services and negotiate the cloud service contract based on the terms and conditions set by cloud service providers (CSPs). Several standards and guidelines are available for assessing cloud security. However, most of these standards and guidelines are complex and time-consuming to select a service or make an informed decision for CSCs. Moreover, the existing methods are insufficient to solve this problem because they are process-oriented, neglect the importance of stakeholder requirements, and lack a comprehensive and rigid analytic method that can aid decision-makers in making the right decisions. In this paper, we developed two evaluation techniques: (i) a quantitative cloud security assurance method to assess the security level of cloud services by measuring the critical security properties and (ii) a novel and rigid categorical analytical method that enables CSPs to identify the major problems in the system and assess how much gain can be achieved by solving each of them. The cloud security assurance method is based on two important metrics:
              security requirement
              and
              vulnerability
              . It assists CSCs in avoiding severe mistakes and making informed decisions while selecting a cloud service. Moreover, these methods support CSPs in improving the security level of cloud services and meet customer requirements. The proposed methods are validated using different case scenarios on a private cloud platform.},
	language = {en},
	number = {6},
	urldate = {2023-10-30},
	journal = {International Journal of Information Security},
	author = {Shukla, Ankur and Katt, Basel and Yamin, Muhammad Mudassar},
	month = dec,
	year = {2023},
	pages = {1621--1650},
	annote = {already used in Thesis Book
},
	file = {Shukla et al. - 2023 - A quantitative framework for security assurance ev.pdf:files/92/Shukla et al. - 2023 - A quantitative framework for security assurance ev.pdf:application/pdf},
}

@article{zhong_cost-efficient_2020,
	title = {A {Cost}-{Efficient} {Container} {Orchestration} {Strategy} in {Kubernetes}-{Based} {Cloud} {Computing} {Infrastructures} with {Heterogeneous} {Resources}},
	volume = {20},
	issn = {1533-5399, 1557-6051},
	url = {https://dl.acm.org/doi/10.1145/3378447},
	doi = {10.1145/3378447},
	abstract = {Containers, as a lightweight application virtualization technology, have recently gained immense popularity in mainstream cluster management systems like Google Borg and Kubernetes. Prevalently adopted by these systems for task deployments of diverse workloads such as big data, web services, and IoT, they support agile application deployment, environmental consistency, OS distribution portability, application-centric management, and resource isolation. Although most of these systems are mature with advanced features, their optimization strategies are still tailored to the assumption of a static cluster. Elastic compute resources would enable heterogeneous resource management strategies in response to the dynamic business volume for various types of workloads. Hence, we propose a heterogeneous task allocation strategy for cost-efficient container orchestration through resource utilization optimization and elastic instance pricing with three main features. The first one is to support heterogeneous job configurations to optimize the initial placement of containers into existing resources by task packing. The second one is cluster size adjustment to meet the changing workload through autoscaling algorithms. The third one is a rescheduling mechanism to shut down underutilized VM instances for cost saving and reallocate the relevant jobs without losing task progress. We evaluate our approach in terms of cost and performance on the Australian National Cloud Infrastructure (Nectar). Our experiments demonstrate that the proposed strategy could reduce the overall cost by 23\% to 32\% for different types of cloud workload patterns when compared to the default Kubernetes framework.},
	language = {en},
	number = {2},
	urldate = {2023-10-30},
	journal = {ACM Transactions on Internet Technology},
	author = {Zhong, Zhiheng and Buyya, Rajkumar},
	month = may,
	year = {2020},
	pages = {1--24},
	file = {Full Text PDF:files/93/Zhong and Buyya - 2020 - A Cost-Efficient Container Orchestration Strategy .pdf:application/pdf},
}

@inproceedings{kermabon-bobinnec_prospec_2022,
	address = {Baltimore MD USA},
	title = {{ProSPEC}: {Proactive} {Security} {Policy} {Enforcement} for {Containers}},
	isbn = {978-1-4503-9220-4},
	shorttitle = {{ProSPEC}},
	url = {https://dl.acm.org/doi/10.1145/3508398.3511515},
	doi = {10.1145/3508398.3511515},
	abstract = {By providing lightweight and portable support for cloud native applications, container environments have gained significant momentum lately. A container orchestrator such as Kubernetes can enable the automatic deployment and maintenance of a large number of containerized applications. However, due to its critical role, a container orchestrator also attracts a wide range of security threats exploiting misconfigurations or implementation flaws. Moreover, enforcing security policies at runtime against such security threats becomes far more challenging, as the large scale of container environments implies high complexity, while the high dynamicity demands a short response time. In this paper, we tackle this key security challenge to container environments through a proactive approach, namely, ProSPEC. Our approach leverages learning-based prediction to conduct the computationally intensive steps (e.g., security verification) in advance, while keeping the runtime steps (e.g., policy enforcement) lightweight. Consequently, ProSPEC can ensure a practical response time (e.g., less than 10 ms in contrast to 600 ms with one of the most popular existing approaches) for large container environments (up to 800 Pods).},
	language = {en},
	urldate = {2023-10-30},
	booktitle = {Proceedings of the {Twelfth} {ACM} {Conference} on {Data} and {Application} {Security} and {Privacy}},
	publisher = {ACM},
	author = {Kermabon-Bobinnec, Hugo and Gholipourchoubeh, Mahmood and Bagheri, Sima and Majumdar, Suryadipta and Jarraya, Yosr and Pourzandi, Makan and Wang, Lingyu},
	month = apr,
	year = {2022},
	pages = {155--166},
	file = {Kermabon-Bobinnec et al. - 2022 - ProSPEC Proactive Security Policy Enforcement for.pdf:files/95/Kermabon-Bobinnec et al. - 2022 - ProSPEC Proactive Security Policy Enforcement for.pdf:application/pdf},
}

@inproceedings{bose_under-reported_2021,
	address = {Madrid, Spain},
	title = {‘{Under}-reported’ {Security} {Defects} in {Kubernetes} {Manifests}},
	isbn = {978-1-66544-553-5},
	url = {https://ieeexplore.ieee.org/document/9476056/},
	doi = {10.1109/EnCyCriS52570.2021.00009},
	abstract = {With the advent of the fourth industrial revolution, industry practitioners are moving towards container-based infrastructure for managing their digital workloads. Kubernetes, a container orchestration tool, is reported to help industry practitioners in automated management of cloud infrastructure and rapid deployment of software services. Despite reported beneﬁts, Kubernetes installations are susceptible to security defects, as it occurred for Tesla in 2018. Understanding how frequently security defects appear in Kubernetes installations can help cybersecurity researchers to investigate security-related vulnerabilities for Kubernetes and generate security best practices to avoid them. In this position paper, we ﬁrst quantify how frequently security defects appear in Kubernetes manifests, i.e., conﬁguration ﬁles that are use to install and manage Kubernetes. Next, we lay out a list of future research directions that researchers can pursue.},
	language = {en},
	urldate = {2023-10-16},
	booktitle = {2021 {IEEE}/{ACM} 2nd {International} {Workshop} on {Engineering} and {Cybersecurity} of {Critical} {Systems} ({EnCyCriS})},
	publisher = {IEEE},
	author = {Bose, Dibyendu Brinto and Rahman, Akond and Shamim, Shazibul Islam},
	month = jun,
	year = {2021},
	pages = {9--12},
	file = {Bose et al. - 2021 - ‘Under-reported’ Security Defects in Kubernetes Ma.pdf:files/96/Bose et al. - 2021 - ‘Under-reported’ Security Defects in Kubernetes Ma.pdf:application/pdf},
}

@inproceedings{cao_learning_2022,
	address = {Vienna Austria},
	title = {Learning {State} {Machines} to {Monitor} and {Detect} {Anomalies} on a {Kubernetes} {Cluster}},
	isbn = {978-1-4503-9670-7},
	url = {https://dl.acm.org/doi/10.1145/3538969.3543810},
	doi = {10.1145/3538969.3543810},
	language = {en},
	urldate = {2023-10-15},
	booktitle = {Proceedings of the 17th {International} {Conference} on {Availability}, {Reliability} and {Security}},
	publisher = {ACM},
	author = {Cao, Clinton and Blaise, Agathe and Verwer, Sicco and Rebecchi, Filippo},
	month = aug,
	year = {2022},
	pages = {1--9},
	file = {Full Text PDF:files/98/Cao et al. - 2022 - Learning State Machines to Monitor and Detect Anom.pdf:application/pdf},
}

@inproceedings{pecka_privilege_2022,
	address = {Pittsburgh PA USA},
	title = {Privilege {Escalation} {Attack} {Scenarios} on the {DevOps} {Pipeline} {Within} a {Kubernetes} {Environment}},
	isbn = {978-1-4503-9674-5},
	url = {https://dl.acm.org/doi/10.1145/3529320.3529325},
	doi = {10.1145/3529320.3529325},
	language = {en},
	urldate = {2023-10-15},
	booktitle = {Proceedings of the {International} {Conference} on {Software} and {System} {Processes} and {International} {Conference} on {Global} {Software} {Engineering}},
	publisher = {ACM},
	author = {Pecka, Nicholas and Ben Othmane, Lotfi and Valani, Altaz},
	month = may,
	year = {2022},
	pages = {45--49},
	file = {Full Text PDF:files/99/Pecka et al. - 2022 - Privilege Escalation Attack Scenarios on the DevOp.pdf:application/pdf},
}

@article{rahman_security_2023,
	title = {Security {Misconfigurations} in {Open} {Source} {Kubernetes} {Manifests}: {An} {Empirical} {Study}},
	volume = {32},
	issn = {1049-331X, 1557-7392},
	shorttitle = {Security {Misconfigurations} in {Open} {Source} {Kubernetes} {Manifests}},
	url = {https://dl.acm.org/doi/10.1145/3579639},
	doi = {10.1145/3579639},
	abstract = {Context:
              Kubernetes has emerged as the de-facto tool for automated container orchestration. Business and government organizations are increasingly adopting Kubernetes for automated software deployments. Kubernetes is being used to provision applications in a wide range of domains, such as time series forecasting, edge computing, and high-performance computing. Due to such a pervasive presence, Kubernetes-related security misconfigurations can cause large-scale security breaches. Thus, a systematic analysis of security misconfigurations in Kubernetes manifests, i.e., configuration files used for Kubernetes, can help practitioners secure their Kubernetes clusters.


              Objective:
              The goal of this paper is to help practitioners secure their Kubernetes clusters by identifying security misconfigurations that occur in Kubernetes manifests
              .


              Methodology:
              We conduct an empirical study with 2,039 Kubernetes manifests mined from 92 open-source software repositories to systematically characterize security misconfigurations in Kubernetes manifests. We also construct a static analysis tool called Security Linter for Kubernetes Manifests (
              SLI-KUBE
              ) to quantify the frequency of the identified security misconfigurations.


              Results:
              In all, we identify 11 categories of security misconfigurations, such as absent resource limit, absent
              securityContext
              , and activation of
              hostIPC
              . Specifically, we identify 1,051 security misconfigurations in 2,039 manifests. We also observe the identified security misconfigurations affect entities that perform mesh-related load balancing, as well as provision pods and stateful applications. Furthermore, practitioners agreed to fix 60\% of 10 misconfigurations reported by us.


              Conclusion:
              Our empirical study shows Kubernetes manifests to include security misconfigurations, which necessitates security-focused code reviews and application of static analysis when Kubernetes manifests are developed.},
	language = {en},
	number = {4},
	urldate = {2023-10-15},
	journal = {ACM Transactions on Software Engineering and Methodology},
	author = {Rahman, Akond and Shamim, Shazibul Islam and Bose, Dibyendu Brinto and Pandita, Rahul},
	month = oct,
	year = {2023},
	pages = {1--36},
	file = {Full Text PDF:files/100/Rahman et al. - 2023 - Security Misconfigurations in Open Source Kubernet.pdf:application/pdf},
}

@inproceedings{shamim_mitigating_2021,
	address = {Athens Greece},
	title = {Mitigating security attacks in kubernetes manifests for security best practices violation},
	isbn = {978-1-4503-8562-6},
	url = {https://dl.acm.org/doi/10.1145/3468264.3473495},
	doi = {10.1145/3468264.3473495},
	language = {en},
	urldate = {2023-10-15},
	booktitle = {Proceedings of the 29th {ACM} {Joint} {Meeting} on {European} {Software} {Engineering} {Conference} and {Symposium} on the {Foundations} of {Software} {Engineering}},
	publisher = {ACM},
	author = {Shamim, Shazibul Islam},
	month = aug,
	year = {2021},
	pages = {1689--1690},
	file = {Full Text PDF:files/101/Shamim - 2021 - Mitigating security attacks in kubernetes manifest.pdf:application/pdf},
}

@article{felix_kubernetes_nodate,
	title = {Kubernetes {Security} and {Access} {Management}},
	language = {en},
	author = {Felix, Chris and Garg, Hitesh and Dikaleh, Serjik},
	file = {Felix et al. - Kubernetes Security and Access Management.pdf:files/102/Felix et al. - Kubernetes Security and Access Management.pdf:application/pdf},
}

@book{katsikas_computer_2022,
	address = {Cham},
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {Computer {Security}. {ESORICS} 2021 {International} {Workshops}: {CyberICPS}, {SECPRE}, {ADIoT}, {SPOSE}, {CPS4CIP}, and {CDT}\&{SECOMANE}, {Darmstadt}, {Germany}, {October} 4–8, 2021, {Revised} {Selected} {Papers}},
	volume = {13106},
	isbn = {978-3-030-95483-3 978-3-030-95484-0},
	shorttitle = {Computer {Security}. {ESORICS} 2021 {International} {Workshops}},
	url = {https://link.springer.com/10.1007/978-3-030-95484-0},
	language = {en},
	urldate = {2023-10-15},
	publisher = {Springer International Publishing},
	editor = {Katsikas, Sokratis and Lambrinoudakis, Costas and Cuppens, Nora and Mylopoulos, John and Kalloniatis, Christos and Meng, Weizhi and Furnell, Steven and Pallas, Frank and Pohle, Jörg and Sasse, M. Angela and Abie, Habtamu and Ranise, Silvio and Verderame, Luca and Cambiaso, Enrico and Maestre Vidal, Jorge and Sotelo Monge, Marco Antonio},
	year = {2022},
	doi = {10.1007/978-3-030-95484-0},
	file = {Katsikas et al. - 2022 - Computer Security. ESORICS 2021 International Work.pdf:files/103/Katsikas et al. - 2022 - Computer Security. ESORICS 2021 International Work.pdf:application/pdf},
}

@article{schneider_enforceable_2000,
	title = {Enforceable security policies},
	volume = {3},
	issn = {1094-9224, 1557-7406},
	url = {https://dl.acm.org/doi/10.1145/353323.353382},
	doi = {10.1145/353323.353382},
	abstract = {A precise characterization is given for the class of security policies enforceable with mechanisms that work by monitoring system execution, and automata are introduced for specifying exactly that class of security policies. Techniques to enforce security policies specified by such automata are also discussed.},
	language = {en},
	number = {1},
	urldate = {2023-10-13},
	journal = {ACM Transactions on Information and System Security},
	author = {Schneider, Fred B.},
	month = feb,
	year = {2000},
	pages = {30--50},
	file = {Full Text PDF:files/106/Schneider - 2000 - Enforceable security policies.pdf:application/pdf},
}

@article{schneider_enforceable_2000-1,
	title = {Enforceable security policies},
	volume = {3},
	issn = {1094-9224, 1557-7406},
	url = {https://dl.acm.org/doi/10.1145/353323.353382},
	doi = {10.1145/353323.353382},
	abstract = {A precise characterization is given for the class of security policies enforceable with mechanisms that work by monitoring system execution, and automata are introduced for specifying exactly that class of security policies. Techniques to enforce security policies specified by such automata are also discussed.},
	language = {en},
	number = {1},
	urldate = {2023-10-13},
	journal = {ACM Transactions on Information and System Security},
	author = {Schneider, Fred B.},
	month = feb,
	year = {2000},
	pages = {30--50},
	file = {Full Text PDF:files/107/Schneider - 2000 - Enforceable security policies.pdf:application/pdf},
}

@article{laird_analysis_1991,
	title = {An analysis of soar as an integrated architecture},
	volume = {2},
	issn = {0163-5719},
	url = {https://dl.acm.org/doi/10.1145/122344.122364},
	doi = {10.1145/122344.122364},
	abstract = {In this article we provide a brief analysis of the Soar architecture [Laird
              et al.,
              1987; Laird
              et al.,
              1990; Rosenbloom
              et al.,
              1991a] with respect to the issues listed in the preface of this collection.},
	language = {en},
	number = {4},
	urldate = {2023-10-11},
	journal = {ACM SIGART Bulletin},
	author = {Laird, John and Hucka, Mike and Huffman, Scott and Rosenbloom, Paul},
	month = jul,
	year = {1991},
	pages = {98--103},
	file = {Laird et al. - 1991 - An analysis of soar as an integrated architecture.pdf:files/109/Laird et al. - 1991 - An analysis of soar as an integrated architecture.pdf:application/pdf},
}

@article{yeoh_zero_2023,
	title = {Zero trust cybersecurity: {Critical} success factors and {A} maturity assessment framework},
	volume = {133},
	issn = {01674048},
	shorttitle = {Zero trust cybersecurity},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S016740482300322X},
	doi = {10.1016/j.cose.2023.103412},
	abstract = {Zero trust cybersecurity is beginning to replace traditional perimeter-based security strategies and is being adopted by organizations across a wide range of industries. However, the implementation of zero trust is a complex undertaking, different from traditional perimeter-based security, and requires a fresh approach in terms of its management. As such, a clear set of critical success factors (CSFs) will help organizations to better plan, assess, and manage their zero trust cybersecurity. In response, we investigated the CSFs for implementing zero trust cybersecurity by conducting a three-round Delphi study to obtain the consensus from a panel of 12 cybersecurity experts. We built a multi-dimensional CSFs framework that comprises eight dimensions, namely identity, endpoint, application and workload, data, network, infrastructure, visibility and analytics, and auto­ mation and orchestration. Based on the CSFs, we developed a maturity assessment framework enabling orga­ nizations to evaluate their zero trust maturity. This paper contributes to a theoretical understanding of how to deploy zero trust from multiple dimensions and offers a viable guidance framework for organizations from a practical perspective. This paper is useful for organizational stakeholders who are in the process of planning, reviewing, or implementing zero trust cybersecurity.},
	language = {en},
	urldate = {2023-10-11},
	journal = {Computers \& Security},
	author = {Yeoh, William and Liu, Marina and Shore, Malcolm and Jiang, Frank},
	month = oct,
	year = {2023},
	pages = {103412},
	file = {Yeoh et al. - 2023 - Zero trust cybersecurity Critical success factors.pdf:files/110/Yeoh et al. - 2023 - Zero trust cybersecurity Critical success factors.pdf:application/pdf},
}

@inproceedings{bennouri_role_2023,
	address = {Budva, Montenegro},
	title = {The {Role} of {SOC} in {Ensuring} the {Security} of {IoT} {Devices}: {A} {Review} of {Current} {Challenges} and {Future} {Directions}},
	isbn = {9798350322910},
	shorttitle = {The {Role} of {SOC} in {Ensuring} the {Security} of {IoT} {Devices}},
	url = {https://ieeexplore.ieee.org/document/10155021/},
	doi = {10.1109/MECO58584.2023.10155021},
	abstract = {The growing popularity and deployment of Internet of Things (IoT) devices has led to serious security concerns. The integration of a security operations center (SOC) becomes increasingly important in this situation to ensure the security of IoT devices. In this article, we will present a summary of IoT device security issues, their vulnerabilities, a review of current challenges to keep these devices secure, and discuss the role that SOC can bring in protecting IoT devices while considering the challenges encountered and the directions to consider when implementing a reliable SOC for IoT monitoring.},
	language = {en},
	urldate = {2023-10-11},
	booktitle = {2023 12th {Mediterranean} {Conference} on {Embedded} {Computing} ({MECO})},
	publisher = {IEEE},
	author = {Bennouri, Hajar and Abdi, Abdiaziz and Hossain, Iqbal and Pujol, Alexandre},
	month = jun,
	year = {2023},
	pages = {1--8},
	file = {Bennouri et al. - 2023 - The Role of SOC in Ensuring the Security of IoT De.pdf:files/111/Bennouri et al. - 2023 - The Role of SOC in Ensuring the Security of IoT De.pdf:application/pdf},
}

@article{bridges_testing_2023,
	title = {Testing {SOAR} tools in use},
	volume = {129},
	issn = {01674048},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S0167404823001116},
	doi = {10.1016/j.cose.2023.103201},
	language = {en},
	urldate = {2023-10-11},
	journal = {Computers \& Security},
	author = {Bridges, Robert A. and Rice, Ashley E. and Oesch, Sean and Nichols, Jeffrey． A. and Watson, Cory and Spakes, Kevin and Norem, Savannah and Huettel, Mike and Jewell, Brian and Weber, Brian and Gannon, Connor and Bizovi, Olivia and Hollifield, Samuel C. and Erwin, Samantha},
	month = jun,
	year = {2023},
	pages = {103201},
	file = {Bridges et al. - 2023 - Testing SOAR tools in use.pdf:files/112/Bridges et al. - 2023 - Testing SOAR tools in use.pdf:application/pdf},
}

@article{khan_systematic_2023,
	title = {A {Systematic} {Analysis} of the {Capital} {One} {Data} {Breach}: {Critical} {Lessons} {Learned}},
	volume = {26},
	issn = {2471-2566, 2471-2574},
	shorttitle = {A {Systematic} {Analysis} of the {Capital} {One} {Data} {Breach}},
	url = {https://dl.acm.org/doi/10.1145/3546068},
	doi = {10.1145/3546068},
	abstract = {The 2019 Capital One data breach was one of the largest data breaches impacting the privacy and security of personal information of over a 100 million individuals. In most reports about a cyberattack, you will often hear that it succeeded because a single employee clicked on a link in a phishing email or forgot to patch some software, making it seem like an isolated, one-off, trivial problem involving maybe one person, committing a mistake or being negligent. But that is usually not the complete story. By ignoring the related managerial and organizational failures, you are leaving in place the conditions for the next breach. Using our Cybersafety analysis methodology, we identified control failures spanning control levels, going from rather technical issues up to top management, the Board of Directors, and Government regulators. In this analysis, we reconstruct the Capital One hierarchical cyber safety control structure, identify what parts failed and why, and provide recommendations for improvements. This work demonstrates how to discover the true causes of security failures in complex information systems and derive systematic cybersecurity improvements that likely apply to many other organizations. It also provides an approach that individuals can use to evaluate and better secure their organizations.},
	language = {en},
	number = {1},
	urldate = {2023-10-11},
	journal = {ACM Transactions on Privacy and Security},
	author = {Khan, Shaharyar and Kabanov, Ilya and Hua, Yunke and Madnick, Stuart},
	month = feb,
	year = {2023},
	pages = {1--29},
	file = {Khan et al. - 2023 - A Systematic Analysis of the Capital One Data Brea.pdf:files/113/Khan et al. - 2023 - A Systematic Analysis of the Capital One Data Brea.pdf:application/pdf},
}

@inproceedings{haresamudram_solving_2023,
	address = {Cancun, Quintana Roo Mexico},
	title = {Solving the {Sensor}-based {Activity} {Recognition} {Problem} ({SOAR}): {Self}-supervised, {Multi}-modal {Recognition} of {Activities} from {Wearable} {Sensors}},
	isbn = {9798400702006},
	shorttitle = {Solving the {Sensor}-based {Activity} {Recognition} {Problem} ({SOAR})},
	url = {https://dl.acm.org/doi/10.1145/3594739.3605102},
	doi = {10.1145/3594739.3605102},
	abstract = {Feature extraction lies at the core of Human Activity Recognition (HAR): the automated inference of what activity is being performed. Traditionally, the HAR community used statistical metrics and distribution-based representations to summarize the movement present in windows of sensor data into feature vectors. More recently, learned representations have been used successfully in lieu of such handcrafted and manually engineered features. In particular, the community has shown substantial interest in self-supervised methods, which leverage large-scale unlabeled data to first learn useful representations that are subsequently fine-tuned to the target applications. In this tutorial, we focus on representations for single-sensor and multi-modal setups, and go beyond the current de facto of learning representations. We also discuss the economic use of existing representations, specifically via transfer learning and domain adaptation. The proposed tutorial will introduce stateof-the-art methods for representation learning in HAR, and provide a forum for researchers from mobile and ubiquitous computing to not only discuss the current state of the field but to also chart future directions for the field itself, including answering what it would take to finally solve the activity recognition problem.},
	language = {en},
	urldate = {2023-10-11},
	booktitle = {Adjunct {Proceedings} of the 2023 {ACM} {International} {Joint} {Conference} on {Pervasive} and {Ubiquitous} {Computing} \& the 2023 {ACM} {International} {Symposium} on {Wearable} {Computing}},
	publisher = {ACM},
	author = {Haresamudram, Harish and Tang, Chi Ian and Suh, Sungho and Lukowicz, Paul and Ploetz, Thomas},
	month = oct,
	year = {2023},
	pages = {759--761},
	file = {Haresamudram et al. - 2023 - Solving the Sensor-based Activity Recognition Prob.pdf:files/114/Haresamudram et al. - 2023 - Solving the Sensor-based Activity Recognition Prob.pdf:application/pdf},
}

@inproceedings{empl_soar4iot_2022,
	address = {Vienna Austria},
	title = {{SOAR4IoT}: {Securing} {IoT} {Assets} with {Digital} {Twins}},
	isbn = {978-1-4503-9670-7},
	shorttitle = {{SOAR4IoT}},
	url = {https://dl.acm.org/doi/10.1145/3538969.3538975},
	doi = {10.1145/3538969.3538975},
	abstract = {As more and more security tools provide organizations with cybersecurity capabilities, security analysts are overwhelmed by security events. Resolving these events is challenging due to extensive manual processes, limited financial resources, and human errors. Security Orchestration, Automation, and Response (SOAR) is an established approach to manage security tools and assets. However, SOAR platforms typically integrate traditional IT systems only. Additional considerations are required to deal with the Internet of Things (IoT), its multiple devices and complex networks. Therefore, we adapt SOAR to IoT. We first aggregate existing research and information on SOAR and SOAR platforms. We envision the SOAR4IoT framework, making IoT assets manageable for SOAR via middleware. We implement a prototypical digital twin-based SOAR application integrating IoT assets and security tools to validate our framework. The experimental setup includes two playbooks coping with Mirai and Sybil attacks. Results show feasibility as our SOAR application enables securing IoT assets with digital twins.},
	language = {en},
	urldate = {2023-10-11},
	booktitle = {Proceedings of the 17th {International} {Conference} on {Availability}, {Reliability} and {Security}},
	publisher = {ACM},
	author = {Empl, Philip and Schlette, Daniel and Zupfer, Daniel and Pernul, Günther},
	month = aug,
	year = {2022},
	pages = {1--10},
	file = {Empl et al. - 2022 - SOAR4IoT Securing IoT Assets with Digital Twins.pdf:files/115/Empl et al. - 2022 - SOAR4IoT Securing IoT Assets with Digital Twins.pdf:application/pdf},
}

@inproceedings{segal_soar_2021,
	address = {Virtual Event Germany},
	title = {{SOAR}: minimizing network utilization with bounded in-network computing},
	isbn = {978-1-4503-9098-9},
	shorttitle = {{SOAR}},
	url = {https://dl.acm.org/doi/10.1145/3485983.3494853},
	doi = {10.1145/3485983.3494853},
	abstract = {In-network computing via smart networking devices is a recent trend for modern datacenter networks. State-of-the-art switches with near line rate computing and aggregation capabilities are developed to enable, e.g., acceleration and better utilization for modern applications like big data analytics, and large scale distributed and federated machine learning. We formulate and study the problem of activating a limited number of in-network computing devices within a network, aiming at reducing the overall network utilization for a given workload. Such limitations on the number of in-network computing elements per workload arise, e.g., in incremental upgrades of network infrastructure, and are also due to requiring specialized middleboxes, or FPGAs, that should support heterogeneous workloads, and multiple tenants.},
	language = {en},
	urldate = {2023-10-11},
	booktitle = {Proceedings of the 17th {International} {Conference} on emerging {Networking} {EXperiments} and {Technologies}},
	publisher = {ACM},
	author = {Segal, Raz and Avin, Chen and Scalosub, Gabriel},
	month = dec,
	year = {2021},
	pages = {16--29},
	file = {Segal et al. - 2021 - SOAR minimizing network utilization with bounded .pdf:files/116/Segal et al. - 2021 - SOAR minimizing network utilization with bounded .pdf:application/pdf},
}

@article{danquah_security_2020,
	title = {Security {Operations} {Center}: {A} {Framework} for {Automated} {Triage}, {Containment} and {Escalation}},
	volume = {11},
	issn = {2153-1234, 2153-1242},
	shorttitle = {Security {Operations} {Center}},
	url = {https://www.scirp.org/journal/doi.aspx?doi=10.4236/jis.2020.114015},
	doi = {10.4236/jis.2020.114015},
	abstract = {There have been a lot of research exertions and studies to improve the safety of critical infrastructures using the Security Operations Center (SOC). As part of efforts, the purpose of this research is to propose a framework to automate the SOC’s performance of triage, containment and escalation. The research leveraged on qualitative desk review to collect data for analysis, deduced strengths and weaknesses for the current SOC implementations and used that as a basis for proposing the framework. In view of the constant evolution of SOC operations and capabilities coupled with the huge volumes of data collected for analysis, an efficient framework for SOC operations is proposed. The qualitative analysis is used to deduce strengths and weaknesses for the current SOC implementations as a premise for proposing the framework. It consists of eight interactive stages that further leverage on a proposed algorithm for baselining, remediation and escalation. The result of this research is a proposed framework that serves as a unique contribution to enhancing the SOC’s ability to automatically perform triage, containment and escalation. Supplementary to similar and earlier work reviewed, the framework is proposed as the way forward to automatically enable SOC setups with the capacity to efficiently perform triage of security threats, vulnerabilities and incidents, effectively contain identified breaches and appropriately escalate for prompt and accurate solutions.},
	language = {en},
	number = {04},
	urldate = {2023-10-11},
	journal = {Journal of Information Security},
	author = {Danquah, Paul},
	year = {2020},
	pages = {225--240},
	file = {Danquah - 2020 - Security Operations Center A Framework for Automa.pdf:files/117/Danquah - 2020 - Security Operations Center A Framework for Automa.pdf:application/pdf},
}

@article{zseby_cyber-physical_2018,
	title = {Cyber-{Physical} {Systems} – {Security}},
	volume = {135},
	issn = {0932-383X, 1613-7620},
	url = {http://link.springer.com/10.1007/s00502-018-0619-2},
	doi = {10.1007/s00502-018-0619-2},
	language = {de},
	number = {3},
	urldate = {2023-10-11},
	journal = {e \& i Elektrotechnik und Informationstechnik},
	author = {Zseby, Tanja},
	month = jun,
	year = {2018},
	pages = {249--249},
	file = {Zseby - 2018 - Cyber-Physical Systems – Security.pdf:files/118/Zseby - 2018 - Cyber-Physical Systems – Security.pdf:application/pdf},
}

@article{ferreira_recommender_2023,
	title = {Recommender {Systems} in {Cybersecurity}},
	volume = {65},
	issn = {0219-1377, 0219-3116},
	url = {https://link.springer.com/10.1007/s10115-023-01906-6},
	doi = {10.1007/s10115-023-01906-6},
	abstract = {With the growth of CyberTerrorism, enterprises worldwide have been struggling to stop intruders from obtaining private data. Despite the efforts made by Cybersecurity experts, the shortage of skillful security teams and the usage of intelligent attacks have slowed down the enhancement of defense mechanisms. Furthermore, the pandemic in 2020 forced organizations to work in remote environments with poor security, leading to increased cyberattacks. One possible solution for these problems is the implementation of Recommender Systems to assist Cybersecurity human operators. Our goal is to survey the application of Recommender Systems in Cybersecurity architectures. These decision-support tools deal with information overload through ﬁltering and prioritization methods, allowing businesses to increase revenue, achieve better user satisfaction, and make faster and more efﬁcient decisions in various domains (e-commerce, healthcare, ﬁnance, and other ﬁelds). Several reports demonstrate the potential of using these recommendation structures to enhance the detection and prevention of cyberattacks and aid Cybersecurity experts in treating client incidents. This survey discusses several studies where Recommender Systems are implemented in Cybersecurity with encouraging results. One promising direction explored by the community is using Recommender Systems as attack predictors and navigation assistance tools. As contributions, we show the recent efforts in this area and summarize them in a table. Furthermore, we provide an in-depth analysis of potential research lines. For example, the inclusion of Recommender Systems in security information event management systems and security orchestration, automation, and response applications could decrease their complexity and information overload.},
	language = {en},
	number = {12},
	urldate = {2023-10-11},
	journal = {Knowledge and Information Systems},
	author = {Ferreira, Leonardo and Silva, Daniel Castro and Itzazelaia, Mikel Uriarte},
	month = dec,
	year = {2023},
	pages = {5523--5559},
	file = {Ferreira et al. - 2023 - Recommender Systems in Cybersecurity.pdf:files/119/Ferreira et al. - 2023 - Recommender Systems in Cybersecurity.pdf:application/pdf},
}

@article{wiefling_pump_2023,
	title = {Pump {Up} {Password} {Security}! {Evaluating} and {Enhancing} {Risk}-{Based} {Authentication} on a {Real}-{World} {Large}-{Scale} {Online} {Service}},
	volume = {26},
	issn = {2471-2566, 2471-2574},
	url = {https://dl.acm.org/doi/10.1145/3546069},
	doi = {10.1145/3546069},
	abstract = {Risk-based authentication (RBA) aims to protect users against attacks involving stolen passwords. RBA monitors features during login, and requests re-authentication when feature values widely differ from those previously observed. It is recommended by various national security organizations, and users perceive it more usable than and equally secure to equivalent two-factor authentication. Despite that, RBA is still used by very few online services. Reasons for this include a lack of validated open resources on RBA properties, implementation, and configuration. This effectively hinders the RBA research, development, and adoption progress.
            To close this gap, we provide the first long-term RBA analysis on a real-world large-scale online service. We collected feature data of 3.3 million users and 31.3 million login attempts over more than 1 year. Based on the data, we provide (i) studies on RBA’s real-world characteristics plus its configurations and enhancements to balance usability, security, and privacy; (ii) a machine learning–based RBA parameter optimization method to support administrators finding an optimal configuration for their own use case scenario; (iii) an evaluation of the round-trip time feature’s potential to replace the IP address for enhanced user privacy; and (iv) a synthesized RBA dataset to reproduce this research and to foster future RBA research. Our results provide insights on selecting an optimized RBA configuration so that users profit from RBA after just a few logins. The open dataset enables researchers to study, test, and improve RBA for widespread deployment in the wild.},
	language = {en},
	number = {1},
	urldate = {2023-10-11},
	journal = {ACM Transactions on Privacy and Security},
	author = {Wiefling, Stephan and Jørgensen, Paul René and Thunem, Sigurd and Iacono, Luigi Lo},
	month = feb,
	year = {2023},
	pages = {1--36},
	file = {Wiefling et al. - 2023 - Pump Up Password Security! Evaluating and Enhancin.pdf:files/120/Wiefling et al. - 2023 - Pump Up Password Security! Evaluating and Enhancin.pdf:application/pdf},
}

@article{fauziyah_knowledge_2022,
	title = {Knowledge {Management} {Strategy} for {Handling} {Cyber} {Attacks} in {E}-{Commerce} with {Computer} {Security} {Incident} {Response} {Team} ({CSIRT})},
	volume = {13},
	issn = {2153-1234, 2153-1242},
	url = {https://www.scirp.org/journal/doi.aspx?doi=10.4236/jis.2022.134016},
	doi = {10.4236/jis.2022.134016},
	language = {en},
	number = {04},
	urldate = {2023-10-11},
	journal = {Journal of Information Security},
	author = {Fauziyah, Fauziyah and Wang, Zhaosun and Joy, Gabriel},
	year = {2022},
	pages = {294--311},
	file = {Fauziyah et al. - 2022 - Knowledge Management Strategy for Handling Cyber A.pdf:files/121/Fauziyah et al. - 2022 - Knowledge Management Strategy for Handling Cyber A.pdf:application/pdf},
}

@inproceedings{malik_improved_2016,
	address = {Bikaner, India},
	title = {Improved {Soar}'s {Intelligent} {Agents}},
	isbn = {978-1-4503-4213-1},
	url = {http://dl.acm.org/citation.cfm?doid=2979779.2979829},
	doi = {10.1145/2979779.2979829},
	abstract = {Cognitive Architectures provide infrastructure and framework for design of Intelligent Agents in manner similar to human beings. Soar is one of the popular cognitive architecture available in literature. It is a theory about cognition, as well as, computer programming software to design intelligent agents.. Soar’s uses a novel technique named Problem Solving Computational Model (PSCM) to solve the entire intelligence problems. The PSCM theory is based on goals (aim of the problem), problem spaces (space of states), states (agent is in a state) and operator (alternative action). Soar chooses the optimal solution for a problem by applying the most preferable operator among the available operators. The two widely investigated problems of AI, namely water jug(WG) and block world(BW) are implemented and improved using freely available soar software about the average performance of the simple water-jug agent in term of speed and to solution quality of the general block world specific planning agent by adding color feature.},
	language = {en},
	urldate = {2023-10-11},
	booktitle = {Proceedings of the {International} {Conference} on {Advances} in {Information} {Communication} {Technology} \& {Computing} - {AICTC} '16},
	publisher = {ACM Press},
	author = {Malik, Naveen Kumar and Saxena, Divya and Singh, V. R.},
	year = {2016},
	pages = {1--7},
	file = {Malik et al. - 2016 - Improved Soar's Intelligent Agents.pdf:files/122/Malik et al. - 2016 - Improved Soar's Intelligent Agents.pdf:application/pdf},
}

@article{dione_hardware_2023,
	title = {Hardware {Security} for {IoT} in the {Quantum} {Era}: {Survey} and {Challenges}},
	volume = {14},
	issn = {2153-1234, 2153-1242},
	shorttitle = {Hardware {Security} for {IoT} in the {Quantum} {Era}},
	url = {https://www.scirp.org/journal/doi.aspx?doi=10.4236/jis.2023.144014},
	doi = {10.4236/jis.2023.144014},
	abstract = {The Internet of Things (IoT) has become a reality: Healthcare, smart cities, intelligent manufacturing, e-agriculture, real-time traffic controls, environment monitoring, camera security systems, etc. are developing services that rely on an IoT infrastructure. Thus, ensuring the security of devices during operation and information exchange becomes a fundamental requirement inherent in providing safe and reliable IoT services. NIST requires hardware implementations that are protected against SCAs for the lightweight cryptography standardization process. These attacks are powerful and non-invasive and rely on observing the physical properties of IoT hardware devices to obtain secret information. In this paper, we present a survey of research on hardware security for the IoT. In addition, the challenges of IoT in the quantum era with the first results of the NIST standardization process for post-quantum cryptography are discussed.},
	language = {en},
	number = {04},
	urldate = {2023-10-11},
	journal = {Journal of Information Security},
	author = {Dione, Doudou and Seck, Boly and Diop, Idy and Cayrel, Pierre-Louis and Faye, Demba and Gueye, Ibrahima},
	year = {2023},
	pages = {227--249},
	file = {Dione et al. - 2023 - Hardware Security for IoT in the Quantum Era Surv.pdf:files/123/Dione et al. - 2023 - Hardware Security for IoT in the Quantum Era Surv.pdf:application/pdf},
}

@inproceedings{allison_digital_2023,
	address = {Benevento Italy},
	title = {Digital {Twin}-{Enhanced} {Incident} {Response} for {Cyber}-{Physical} {Systems}},
	isbn = {9798400707728},
	url = {https://dl.acm.org/doi/10.1145/3600160.3600195},
	doi = {10.1145/3600160.3600195},
	abstract = {Cyber-physical systems underpin many of our society’s critical infrastructures. Ensuring their cyber security is important and complex. A major activity in this regard is cyber security incident response, whose primary goal is to detect and mitigate cyber-attacks in order to ensure the continuity and resilience of services. For cyber-physical systems this is particularly challenging because it requires insights both from the cyber and physical (process) domains and the engagement of stakeholders that are not strictly concerned with cyber security. A technology that is receiving a lot of attention are digital twins – virtual representations of real-world (cyber-physical) systems. They can be used to support tasks such as estimating the state of a system and exploring the consequences of interventional activities (e.g., upgrades).},
	language = {en},
	urldate = {2023-10-11},
	booktitle = {Proceedings of the 18th {International} {Conference} on {Availability}, {Reliability} and {Security}},
	publisher = {ACM},
	author = {Allison, David and Smith, Paul and Mclaughlin, Kieran},
	month = aug,
	year = {2023},
	pages = {1--10},
	file = {Allison et al. - 2023 - Digital Twin-Enhanced Incident Response for Cyber-.pdf:files/124/Allison et al. - 2023 - Digital Twin-Enhanced Incident Response for Cyber-.pdf:application/pdf},
}

@book{bartwal_security_2022,
	title = {Security {Orchestration}, {Automation}, and {Response} {Engine} for {Deployment} of {Behavioural} {Honeypots}},
	abstract = {Cyber Security is a critical topic for organizations with IT/OT networks as they are always susceptible to attack, whether insider or outsider. Since the cyber landscape is an ever-evolving scenario, one must keep upgrading its security systems to enhance the security of the infrastructure. Tools like Security Information and Event Management (SIEM), Endpoint Detection and Response (EDR), Threat Intelligence Platform (TIP), Information Technology Service Management (ITSM), along with other defensive techniques like Intrusion Detection System (IDS), Intrusion Protection System (IPS), and many others enhance the cyber security posture of the infrastructure. However, the proposed protection mechanisms have their limitations, they are insufficient to ensure security, and the attacker penetrates the network. Deception technology, along with Honeypots, provides a false sense of vulnerability in the target systems to the attackers. The attacker deceived reveals threat intel about their modus operandi. We have developed a Security Orchestration, Automation, and Response (SOAR) Engine that dynamically deploys custom honeypots inside the internal network infrastructure based on the attacker's behavior. The architecture is robust enough to support multiple VLANs connected to the system and used for orchestration. The presence of botnet traffic and DDOS attacks on the honeypots in the network is detected, along with a malware collection system. After being exposed to live traffic for four days, our engine dynamically orchestrated the honeypots 40 times, detected 7823 attacks, 965 DDOS attack packets, and three malicious samples. While our experiments with static honeypots show an average attacker engagement time of 102 seconds per instance, our SOAR Engine-based dynamic honeypots engage attackers on average 3148 seconds.},
	author = {Bartwal, Upendra and Mukhopadhyay, Subhasis and Negi, Rohit and Shukla, Sandeep},
	month = jan,
	year = {2022},
	keywords = {kubernetes, security},
	file = {Full Text PDF:files/146/Bartwal et al. - 2022 - Security Orchestration, Automation, and Response E.pdf:application/pdf},
}

@article{acharekar_exploring_2024,
	title = {Exploring {Security} {Challenges} and {Solutions} in {Kubernetes}: {A} {Comprehensive} {Survey} of {Challenges} and {State}-of-the-{Art} {Approaches}},
	shorttitle = {Exploring {Security} {Challenges} and {Solutions} in {Kubernetes}},
	doi = {10.48175/IJARSCT-15205},
	abstract = {This research paper presents a comprehensive and in-depth study of Kubernetes security Challenges and solutions. The research takes a systematic approach starting at the container level and ending with the pod and the broader Kubernetes cluster. This paper analyses vulnerabilities at these various levels to reveal potential vulnerabilities and challenges. This paper also examines certain high-availability techniques that can enhance a Kubernetes cluster's overall effectiveness. The findings of this study will help to improve knowledge of Kubernetes' high availability and security features as well as throw some light on container-specific strategies and sensitivities to increase system stability and reduce vulnerability.},
	journal = {International Journal of Advanced Research in Science, Communication and Technology},
	author = {Acharekar, Tejas},
	month = jan,
	year = {2024},
	keywords = {kubernetes, security},
	pages = {34--38},
	annote = {Great overview for security issues in Kubernetes to go from there
},
	file = {Full Text:files/150/Acharekar - 2024 - Exploring Security Challenges and Solutions in Kub.pdf:application/pdf},
}

@article{yigit_sever_kubernetes_2023,
	title = {A {Kubernetes} dataset for misuse detection},
	volume = {4},
	issn = {2616-8375},
	url = {https://www.itu.int/pub/S-JNL-VOL4.ISSUE2-2023-A26},
	doi = {10.52953/FPLR8631},
	abstract = {Container security involves a broad spectrum of concerns, including the security of the operating system, au‑diting the supply chain and the application security of the running containers. This wide attack surface will also include the security of the container orchestration system and its components once a container orchestration system is introduced to manage the leet of containers in an environment. In order to advance the research in this ield, prior work should be com‑parable and reproducible. However, we identi ied a research gap for this aspect; publicly available datasets for container security is sparse and reproducibility of the research output so far is arduous. In this study, we share a dataset consisting of network lows, collected from a Kubernetes cluster. Furthermore, we performed a preliminary analysis on the data as a sanity check to evaluate its quality. By sharing this dataset publicly, we hope to help further studies and establish benchmarks in the ield of container networking security.},
	language = {en},
	number = {2},
	urldate = {2024-03-22},
	journal = {ITU Journal on Future and Evolving Technologies},
	author = {{Yigit Sever} and {Adnan Harun Dogan}},
	month = jun,
	year = {2023},
	keywords = {kubernetes, security},
	pages = {383--388},
	file = {Yigit Sever and Adnan Harun Dogan - 2023 - A Kubernetes dataset for misuse detection.pdf:files/152/Yigit Sever and Adnan Harun Dogan - 2023 - A Kubernetes dataset for misuse detection.pdf:application/pdf},
}

@article{sworna_apiro_2023,
	title = {{APIRO}: {A} {Framework} for {Automated} {Security} {Tools} {API} {Recommendation}},
	volume = {32},
	issn = {1049-331X},
	shorttitle = {{APIRO}},
	url = {https://doi.org/10.1145/3512768},
	doi = {10.1145/3512768},
	abstract = {Security Orchestration, Automation, and Response (SOAR) platforms integrate and orchestrate a wide variety of security tools to accelerate the operational activities of Security Operation Center (SOC). Integration of security tools in a SOAR platform is mostly done manually using APIs, plugins, and scripts. SOC teams need to navigate through API calls of different security tools to find a suitable API to define or update an incident response action. Analyzing various types of API documentation with diverse API format and presentation structure involves significant challenges such as data availability, data heterogeneity, and semantic variation for automatic identification of security tool APIs specific to a particular task. Given these challenges can have negative impact on SOC team’s ability to handle security incident effectively and efficiently, we consider it important to devise suitable automated support solutions to address these challenges. We propose a novel learning-based framework for automated security tool API Recommendation for security Orchestration, automation, and response, APIRO. To mitigate data availability constraint, APIRO enriches security tool API description by applying a wide variety of data augmentation techniques. To learn data heterogeneity of the security tools and semantic variation in API descriptions, APIRO consists of an API-specific word embedding model and a Convolutional Neural Network (CNN) model that are used for prediction of top three relevant APIs for a task. We experimentally demonstrate the effectiveness of APIRO in recommending APIs for different tasks using three security tools and 36 augmentation techniques. Our experimental results demonstrate the feasibility of APIRO for achieving 91.9\% Top-1 Accuracy. Compared to the state-of-the-art baseline, APIRO is 26.93\%, 23.03\%, and 20.87\% improved in terms of Top-1, Top-2, and Top-3 Accuracy and outperforms the baseline by 23.7\% in terms of Mean Reciprocal Rank (MRR).},
	number = {1},
	urldate = {2024-03-22},
	journal = {ACM Transactions on Software Engineering and Methodology},
	author = {Sworna, Zarrin Tasnim and Islam, Chadni and Babar, Muhammad Ali},
	month = feb,
	year = {2023},
	keywords = {API Recommendation, Incident Response Plan, Security Operation Center, Security Orchestration, security tool API, SOAR},
	pages = {24:1--24:42},
	file = {Submitted Version:files/155/Sworna et al. - 2023 - APIRO A Framework for Automated Security Tools AP.pdf:application/pdf},
}

@article{sworna_apiro_2023-1,
	title = {{APIRO}: {A} {Framework} for {Automated} {Security} {Tools} {API} {Recommendation}},
	volume = {32},
	issn = {1049-331X},
	shorttitle = {{APIRO}},
	url = {https://dl.acm.org/doi/10.1145/3512768},
	doi = {10.1145/3512768},
	abstract = {Security Orchestration, Automation, and Response (SOAR) platforms integrate and orchestrate a wide variety of security tools to accelerate the operational activities of Security Operation Center (SOC). Integration of security tools in a SOAR platform is mostly done manually using APIs, plugins, and scripts. SOC teams need to navigate through API calls of different security tools to find a suitable API to define or update an incident response action. Analyzing various types of API documentation with diverse API format and presentation structure involves significant challenges such as data availability, data heterogeneity, and semantic variation for automatic identification of security tool APIs specific to a particular task. Given these challenges can have negative impact on SOC team’s ability to handle security incident effectively and efficiently, we consider it important to devise suitable automated support solutions to address these challenges. We propose a novel learning-based framework for automated security tool API Recommendation for security Orchestration, automation, and response, APIRO. To mitigate data availability constraint, APIRO enriches security tool API description by applying a wide variety of data augmentation techniques. To learn data heterogeneity of the security tools and semantic variation in API descriptions, APIRO consists of an API-specific word embedding model and a Convolutional Neural Network (CNN) model that are used for prediction of top three relevant APIs for a task. We experimentally demonstrate the effectiveness of APIRO in recommending APIs for different tasks using three security tools and 36 augmentation techniques. Our experimental results demonstrate the feasibility of APIRO for achieving 91.9\% Top-1 Accuracy. Compared to the state-of-the-art baseline, APIRO is 26.93\%, 23.03\%, and 20.87\% improved in terms of Top-1, Top-2, and Top-3 Accuracy and outperforms the baseline by 23.7\% in terms of Mean Reciprocal Rank (MRR).},
	number = {1},
	urldate = {2024-03-22},
	journal = {ACM Transactions on Software Engineering and Methodology},
	author = {Sworna, Zarrin Tasnim and Islam, Chadni and Babar, Muhammad Ali},
	month = feb,
	year = {2023},
	keywords = {kubernetes, security, API Recommendation, Incident Response Plan, Security Operation Center, Security Orchestration, security tool API, SOAR},
	pages = {24:1--24:42},
	file = {Full Text PDF:files/157/Sworna et al. - 2023 - APIRO A Framework for Automated Security Tools AP.pdf:application/pdf},
}

@article{carrion_kubernetes_2023,
	title = {Kubernetes {Scheduling}: {Taxonomy}, {Ongoing} {Issues} and {Challenges}},
	volume = {55},
	issn = {0360-0300, 1557-7341},
	shorttitle = {Kubernetes {Scheduling}},
	url = {https://dl.acm.org/doi/10.1145/3539606},
	doi = {10.1145/3539606},
	abstract = {Continuous integration enables the development of microservices-based applications using container virtualization technology. Container orchestration systems such as Kubernetes, which has become the
              de facto
              standard, simplify the deployment of container-based applications. However, developing efficient and well-defined orchestration systems is a challenge.

            This article focuses specifically on the scheduler, a key orchestrator task that assigns physical resources to containers. Scheduling approaches are designed based on different Quality of Service (QoS) parameters to provide limited response time, efficient energy consumption, better resource utilization, and other things. This article aims to establish insight knowledge into Kubernetes scheduling, find the main gaps, and thus guide future research in the area. Therefore, we conduct a study of empirical research on Kubernetes scheduling techniques and present a new taxonomy for Kubernetes scheduling. The challenges, future direction, and research opportunities are also discussed.},
	language = {en},
	number = {7},
	urldate = {2024-03-25},
	journal = {ACM Computing Surveys},
	author = {Carrión, Carmen},
	month = jul,
	year = {2023},
	pages = {1--37},
	file = {Carrión - 2023 - Kubernetes Scheduling Taxonomy, Ongoing Issues an.pdf:files/158/Carrión - 2023 - Kubernetes Scheduling Taxonomy, Ongoing Issues an.pdf:application/pdf},
}

@inproceedings{ungureanu_kubernetes_2019,
	address = {Paris France},
	title = {Kubernetes cluster optimization using hybrid shared-state scheduling framework},
	isbn = {978-1-4503-7163-6},
	url = {https://dl.acm.org/doi/10.1145/3341325.3341992},
	doi = {10.1145/3341325.3341992},
	abstract = {This paper presents a novel approach for scheduling the workloads in a Kubernetes cluster, which are sometimes unequally distributed across the environment or deal with fluctuations in terms of resources utilization. Our proposal looks at a hybrid shared-state scheduling framework model that delegates most of the tasks to the distributed scheduling agents and has a scheduling correction function that mainly processes the unscheduled and unprioritized tasks. The scheduling decisions are made based on the entire cluster state which is synchronized and periodically updated by a master-state agent. By preserving the Kubernetes objects and concepts, we analyzed the proposed scheduler behavior under different scenarios, for instance we tested the failover/recovery behavior in a deployed Kubernetes cluster. Moreover, our findings show that in situations like collocation interference or priority preemption, other centralized scheduling frameworks integrated with the Kubernetes system might not perform accordingly due to high latency derived from the calculation of load spreading. In a wider context of the existing scheduling frameworks for container clusters, the distributed models lack of visibility at an upperlevel scheduler might generate conflicting job placements. Therefore, our proposed scheduler encompasses the functionality of both centralized and distributed frameworks. By employing a synchronized cluster state, we ensure an optimal scheduling mechanism for the resources utilization.},
	language = {en},
	urldate = {2024-03-25},
	booktitle = {Proceedings of the 3rd {International} {Conference} on {Future} {Networks} and {Distributed} {Systems}},
	publisher = {ACM},
	author = {Ungureanu, Oana-Mihaela and Vlădeanu, Călin and Kooij, Robert},
	month = jul,
	year = {2019},
	pages = {1--12},
	file = {Ungureanu et al. - 2019 - Kubernetes cluster optimization using hybrid share.pdf:files/159/Ungureanu et al. - 2019 - Kubernetes cluster optimization using hybrid share.pdf:application/pdf},
}

@article{nadaf_kubernetes_2022,
	title = {Kubernetes in {Microservices}},
	volume = {2},
	issn = {2809-7467, 2809-7599},
	url = {https://mail.ijasca.org/index.php/ijasca/article/view/19},
	doi = {10.47679/ijasca.v2i1.19},
	abstract = {The move towards the microservice based architecture is well underway. In this architectural style, small and loosely coupled modules are developed, deployed, and scaled independently to compose cloud-native applications. However, for carrier-grade service providers to migrate to the microservices architectural style, availability remains a concern. Kubernetes is an open source platform that defines a set of building blocks which collectively provide mechanisms for deploying, maintaining, scaling, and healing containerized microservices. Thus, Kubernetes hides the complexity of microservice orchestration while managing their availability. In a preliminary work we evaluated Kubernetes, using its default configuration, from the availability perspective in a private cloud settings. In this paper, we investigate more architectures and conduct more experiments to evaluate the availability that Kubernetes delivers for its managed microservices. We present different architectures for public and private clouds. We evaluate the availability achievable through the healing capability of Kubernetes. We investigate the impact of adding redundancy on the availability of microservice based applications. We conduct experiments under the default configuration of Kubernetes as well as under its most responsive one. We also perform a comparative evaluation with the Availability Management Framework (AMF), which is a proven solution as a middleware service for managing high-availability. The results of our investigations show that in certain cases, the service outage for applications managed with Kubernetes is significantly high.},
	language = {en},
	number = {1},
	urldate = {2024-03-25},
	journal = {International Journal of Advanced Science and Computer Applications},
	author = {Nadaf, Sarah R and Krishnappa, H. K.},
	month = nov,
	year = {2022},
	pages = {7--18},
	file = {Nadaf and Krishnappa - 2022 - Kubernetes in Microservices.pdf:files/160/Nadaf and Krishnappa - 2022 - Kubernetes in Microservices.pdf:application/pdf},
}

@techreport{jian_drs_2023,
	type = {preprint},
	title = {{DRS}: {A} {Deep} {Reinforcement} {Learning} enhanced {Kubernetes} {Scheduler} for {Microservice}-based {System}},
	shorttitle = {{DRS}},
	url = {https://www.authorea.com/users/572171/articles/617148-drs-a-deep-reinforcement-learning-enhanced-kubernetes-scheduler-for-microservice-based-system?commit=4c93783210431d97d7dcf3bb8b0c80d33a5b5baa},
	abstract = {Recently, Kubernetes is widely used to manage and schedule the resources of microservices in cloud-native distributed applications, as the most famous container orchestration framework. However, Kubernetes preferentially schedules microservices to nodes with rich and balanced CPU and memory resources on a single node. The native scheduler of Kubernetes, called Kubescheduler, may cause resource fragmentation and decrease resource utilization. In this paper, we propose a deep reinforcement learning enhanced Kubernetes scheduler named DRS. To improve resource utilization and reduce load imbalance, we ﬁrst present the Kubernetes scheduling problem as a Markov decision process and elaborately designed the state, action, and reward. Then, we design and implement DRS mointor to perceive six metrics about resource utilization to construct a comprehensive global resource view. Finally, DRS can automatically learn the scheduling policy through interaction with the Kubernetes cluster, without relying on expert knowledge about workload and cluster status. We implement a prototype of DRS in a Kubernetes cluster with ﬁve nodes and evaluate its performance. Experimental results highlight that DRS overcomes the shortcomings of Kube-scheduler and achieve the expected scheduling target with three workloads. Compared with Kube-scheduler, DRS brings an improvement of 27.29\% in resource utilization and reduce the load imbalance by 2 .90× on average, with only 3.27\% CPU overhead and 0.648\% communication latency.},
	language = {en},
	urldate = {2024-03-25},
	institution = {Preprints},
	author = {Jian, Zhaolong and Xie, Xueshuo and Fang, Yaozheng and Jiang, Yibing and Li, Tao and Lu, Ye},
	month = jan,
	year = {2023},
	doi = {10.22541/au.167285897.72278925/v1},
	file = {Jian et al. - 2023 - DRS A Deep Reinforcement Learning enhanced Kubern.pdf:files/161/Jian et al. - 2023 - DRS A Deep Reinforcement Learning enhanced Kubern.pdf:application/pdf},
}
